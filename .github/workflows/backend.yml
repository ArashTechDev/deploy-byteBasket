# .github/workflows/backend.yml
name: Backend CI

on:
  push:
    branches: [ main, development ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend.yml'
  pull_request:
    branches: [ main, development ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend.yml'

jobs:
  test:
    runs-on: ubuntu-latest

    # Add PostgreSQL service for testing
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: bytebasket_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: testpassword
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    defaults:
      run:
        working-directory: ./backend

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: 'backend/package-lock.json'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Setup test database
      run: |
        # Run database migrations for testing
        psql -h localhost -U postgres -d bytebasket_test -f src/models/migrations/init.sql
      env:
        PGPASSWORD: testpassword
    
    - name: Lint
      run: npm run lint
    
    - name: Run tests
      run: npm test
      env:
        NODE_ENV: test
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: bytebasket_test
        DB_USER: postgres
        DB_PASSWORD: testpassword
        JWT_SECRET: test-secret-key
    
    - name: Check test coverage
      run: npm run test -- --coverage --passWithNoTests
      env:
        NODE_ENV: test
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: bytebasket_test
        DB_USER: postgres
        DB_PASSWORD: testpassword
        JWT_SECRET: test-secret-key